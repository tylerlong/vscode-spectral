{
  "activationEvents": [
    "*"
  ],
  "author": "Stoplight <support@stoplight.io>",
  "bugs": {
    "url": "https://github.com/stoplightio/vscode-spectral/issues"
  },
  "categories": [
    "Linters"
  ],
  "contributes": {
    "configuration": {
      "properties": {
        "spectral.enable": {
          "default": true,
          "description": "Controls whether or not Spectral is enabled.",
          "scope": "resource",
          "type": "boolean"
        },
        "spectral.rulesetFile": {
          "description": "Location of the ruleset file to use when validating. If omitted, the default is a .spectral.yml/.spectral.json in the same folder as the document being validated. Paths are relative to the workspace.",
          "scope": "resource",
          "type": "string"
        },
        "spectral.run": {
          "default": "onType",
          "description": "Run the linter on save (onSave) or as you type (onType).",
          "enum": [
            "onSave",
            "onType"
          ],
          "scope": "resource",
          "type": "string"
        },
        "spectral.trace.server": {
          "default": "off",
          "description": "Traces the communication between VS Code and the language server.",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "scope": "window",
          "type": "string"
        },
        "spectral.validateFiles": {
          "description": "An array of file globs (e.g., `**/*.yaml`) in minimatch glob format which should be validated by Spectral. If language identifiers are also specified, the file must match both in order to be validated.",
          "items": {
            "type": "string"
          },
          "scope": "resource",
          "type": "array"
        },
        "spectral.validateLanguages": {
          "default": [
            "json",
            "yaml"
          ],
          "description": "An array of language IDs which should be validated by Spectral. If file globs are also specified, the file must match both in order to be validated.",
          "items": {
            "type": "string"
          },
          "scope": "resource",
          "type": "array"
        }
      },
      "title": "Spectral",
      "type": "object"
    },
    "commands": [
      {
        "title": "Show Output Channel",
        "category": "Spectral",
        "command": "spectral.showOutputChannel"
      }
    ]
  },
  "description": "JSON/YAML linter with OpenAPI and custom ruleset support.",
  "devDependencies": {
    "@types/chai": "^4.3.0",
    "@types/chai-jest-snapshot": "^1.3.6",
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.0",
    "@types/node": "^17.0.22",
    "@types/vscode": "^1.65.0",
    "@typescript-eslint/eslint-plugin": "^5.16.0",
    "@typescript-eslint/parser": "^5.16.0",
    "chai": "^4.3.6",
    "chai-jest-snapshot": "^2.0.0",
    "copyfiles": "^2.4.1",
    "cross-env": "^7.0.3",
    "eslint": "^8.11.0",
    "eslint-config-google": "^0.14.0",
    "glob": "^7.2.0",
    "jsonpath": "^1.1.1",
    "merge-options": "^3.0.4",
    "mocha": "^9.2.2",
    "rimraf": "^3.0.2",
    "semver": "^7.3.5",
    "shelljs": "^0.8.5",
    "ts-node": "^10.7.0",
    "typescript": "^4.6.2",
    "vsce": "^2.7.0",
    "vscode-test": "^1.6.1",
    "webpack": "^5.70.0",
    "webpack-cli": "^4.9.2",
    "yarn-upgrade-all": "^0.6.1"
  },
  "displayName": "Spectral",
  "engines": {
    "vscode": "^1.65.2",
    "node": "^17.5.0"
  },
  "homepage": "https://github.com/stoplightio/vscode-spectral",
  "icon": "icon.png",
  "keywords": [
    "linter",
    "validator",
    "OpenAPI",
    "Swagger",
    "API",
    "style guide",
    "API description",
    "API specification",
    "OAS",
    "OAS2",
    "OAS3",
    "AsyncAPI"
  ],
  "license": "Apache-2.0",
  "main": "./client/index.js",
  "name": "spectral",
  "preview": true,
  "private": true,
  "publisher": "stoplight",
  "repository": {
    "type": "git",
    "url": "https://github.com/stoplightio/vscode-spectral"
  },
  "scripts": {
    "clean": "rimraf .dist && rimraf \"client/*(out|wbpkd)\" && rimraf \"server/*(out|wbpkd)\"",
    "compile": "tsc -p client && tsc -p server && yarn copyfiles -u 2 \"./client/src/**/*.{json,yaml,snap}\" ./client/out/",
    "lint": "eslint --ext .ts,.js .",
    "test": "mocha -r ts-node/register \"./+(client|server)/test/unit/**/*.test.ts\"",
    "test:e2e": "cross-env CI=true CHAI_JEST_SNAPSHOT_UPDATE_ALL=false node ./client/out/test/e2e/index.js",
    "watch": "tsc -b -w"
  },
  "version": "0.2.5",
  "workspaces": {
    "packages": [
      "client",
      "server"
    ],
    "nohoist": [
      "client/**",
      "server/**"
    ]
  }
}
